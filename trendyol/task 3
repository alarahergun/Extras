{
    struct Results result;
    
    int cevap[18];
	int temp[18];
	
	int number = 0, ikiBit;
	int i, k;
	
    size_t n = (sizeof(A) / sizeof(A[0]));
	
	for(i=0; i<n; i++)
	{
		number += (A[i] * pow(-2, i));
	}
	
	if(number == 0)
		ikiBit = 0;
	else if (number>0)
	{
		if(number % 2 == 0)
		{
			ikiBit = number/2;
		}
		else ikiBit = number/2 + 1;
	}
	else
	{
		ikiBit = number/2;
	}
	
	for(i=0; ikiBit>0; i++)    
	{    
		temp[i] = ikiBit % 2;    
		ikiBit = ikiBit/2;    
	}    
	
	k=0;
	
	for(i=i-1;i>=0;i--)    
	{    
	    cevap[k] = temp[i];
	    k++;
	}
	
	int *ptr;
	ptr = &cevap[0];
	
    // write your code in C99 (gcc 6.2.0)
    result.B = ptr;
    result.B_length = k; 
    return result;
}
